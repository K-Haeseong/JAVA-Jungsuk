// 변수 		: 단 하나의 값을 저장할 수 있는 메모리상의 공간
// 변수선언 	: 변수타입과 변수이름 지정하기
// 변수 초기화	: 변수를 사용하기 전에 처음으로 값을 지정하는 것
//				: 메모리는 여러 프로그램이 공유하는 자원이므로 전에 다른 프로그램에 의해 저장된 ‘알 수없는 값（쓰레기값, garbage value）’이 남아있을 수 있기 때문 이다.

// <변수의 명명규칙>
// 1. 대소문자가 구분되며 길이에 제한이 없다.
// 2. 예약어를 사용해서는 안 된다.
// 3. 숫자로 시작해서는 안 된다.
// 4. 특수문자는 '_'와 '$'만을 허용한다


// <그 외 규칙>
// 1. 클래스 이름의 첫 글자는 항상 대문자로 한다.
//	: 변수와 메서드의 이름의 첫 글자는 항상 소문자로 한다.
// 2. 여러 단어로 이루어진 이름은 단어의 첫 글자룔 대문자로 한다. 
// 3. 상수의 이름은 모두 대문자로 한다. 여러 단어로 이루어진 경우 '_'로 구분한다. 


// 기본형  (primitive type)	: 논리형(boolean), 문자형(char), 정수형(byte, short, int, long), 실수형(float, double)
//							: 계산을   위한   실제   값을   저장한다. 
//
// 참조형  (reference type)	: 객체의   주소를   저장한다. 


// 상수 (constant)		: 값을 한번만 저장할 수 있는 공간
// 리터럴 (literal)		: 그 자체로 값을 의미하는 것


// <형변환 >
// 1. boolean을 제외한 나머지 7개의 기본형은 서로 형변환이 가능하다.
// 2. 기본형과 참조형은 서로 형변환 할 수 없다.
// 3. 서로 다른 타입의 변수간의 연산은 형변환을 하는 것이 원칙이지만, 
//    값의 범위가 작은 타입에서 큰 타입으로의 형변환은 생략할 수 있다.
//

public class Variable {

	public static void main(String[] args) {

		// 연습문제 풀어보기
//		1. boolean = 1byte / char = 2byte / byte = 1byte / short = 2byte / int = 4byte / long = 8byte / float = 4byte / double = 8byte
//		2. String regNo = "111111-1111111";
//		3. 리터럴 : 100, 100L, 3.14f / 변수 : i, l / 키워드 : int, long, final, float / 상수 : PI
//		4. b
//		5. 12 / true / 131 / ? / ? /Java / 오류
//		6. b,c
//		7. a,d,g
//		8. a,b,c,d,e
//		9. a,b,e
//		10. 0~65535
//		11. a,b,c,d
//		12. a,b
//		13. c,e,f
		
		
	}

}
